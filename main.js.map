{"version":3,"file":"main.js","mappings":"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","sources":["webpack://js-advanced-diploma/./src/js/Character.js","webpack://js-advanced-diploma/./src/js/Computer.js","webpack://js-advanced-diploma/./src/js/GameController.js","webpack://js-advanced-diploma/./src/js/GamePlay.js","webpack://js-advanced-diploma/./src/js/GameState.js","webpack://js-advanced-diploma/./src/js/GameStateService.js","webpack://js-advanced-diploma/./src/js/PositionedCharacter.js","webpack://js-advanced-diploma/./src/js/Team.js","webpack://js-advanced-diploma/./src/js/app.js","webpack://js-advanced-diploma/./src/js/characterTypes.js","webpack://js-advanced-diploma/./src/js/characters/Bowman.js","webpack://js-advanced-diploma/./src/js/characters/Daemon.js","webpack://js-advanced-diploma/./src/js/characters/Magician.js","webpack://js-advanced-diploma/./src/js/characters/Swordsman.js","webpack://js-advanced-diploma/./src/js/characters/Undead.js","webpack://js-advanced-diploma/./src/js/characters/Vampire.js","webpack://js-advanced-diploma/./src/js/characters/characters.js","webpack://js-advanced-diploma/./src/js/cursors.js","webpack://js-advanced-diploma/./src/js/generators.js","webpack://js-advanced-diploma/./src/js/themes.js","webpack://js-advanced-diploma/./src/js/utils.js","webpack://js-advanced-diploma/./src/css/style.css?6b7b","webpack://js-advanced-diploma/webpack/bootstrap","webpack://js-advanced-diploma/webpack/runtime/define property getters","webpack://js-advanced-diploma/webpack/runtime/hasOwnProperty shorthand","webpack://js-advanced-diploma/webpack/runtime/make namespace object","webpack://js-advanced-diploma/./src/index.js"],"sourcesContent":["/**\r\n * Базовый класс, от которого наследуются классы персонажей\r\n * @property level - уровень персонажа, от 1 до 4\r\n * @property attack - показатель атаки\r\n * @property defence - показатель защиты\r\n * @property health - здоровье персонажа\r\n * @property type - строка с одним из допустимых значений:\r\n * swordsman\r\n * bowman\r\n * magician\r\n * daemon\r\n * undead\r\n * vampire\r\n */\r\nexport default class Character {\r\n  constructor(level, type = 'generic') {\r\n    this.level = level;\r\n    this.attack = 0;\r\n    this.defence = 0;\r\n    this.health = 50;\r\n    this.type = type;\r\n\r\n    // TODO: выбросите исключение, если кто-то использует \"new Character()\"\r\n    if (new.target && new.target.name === 'Character') {\r\n      throw new Error('Объект класса Character не может быть создан');\r\n    }\r\n  }\r\n  \r\n  get briefInformation() {\r\n    return `\\u{1F396}${this.level} \\u{2694}${this.attack} \\u{1F6E1}${this.defence} \\u{2764}${this.health}`;\r\n  }\r\n  \r\n  levelUp() {\r\n    const { health } = this;\r\n  \r\n    this.attack = Math.floor(Math.max(this.attack, this.attack * ((80 + health) / 100)));\r\n    this.defence = Math.floor(Math.max(this.defence, this.defence * ((80 + health) / 100)));\r\n    this.health = Math.floor(Math.min(health + 80, 100));\r\n  \r\n    this.level = Math.min(this.level + 1, 4);\r\n  }\r\n}\r\n","export default class Computer {\r\n    constructor(boardSize) {\r\n      this.boardSize = boardSize;\r\n    }\r\n  \r\n    /**\r\n     * Расчет атки\r\n     *\r\n     * @param positionedEnemyTeam команда противника\r\n     * @param positionedPlayerTeam команда игрока\r\n     * @returns {{enemyHero: PositionedCharacter, playerHero: PositionedCharacter} | false}\r\n     */\r\n    calculatingAttack(positionedEnemyTeam, positionedPlayerTeam) {\r\n      const killOptions = [];\r\n  \r\n      let maxDamage = -Infinity;\r\n      let minDistance = Infinity;\r\n      let targetEnemyHero = null;\r\n      let targetPlayerHero = null;\r\n  \r\n      positionedEnemyTeam.forEach((enemyHero) => {\r\n        positionedPlayerTeam.forEach((playerHero) => {\r\n          if (enemyHero.canAttack(playerHero.position, this.boardSize)) {\r\n            const damage = enemyHero.damageCalculation(playerHero);\r\n  \r\n            if (playerHero.character.health - damage <= 0) {\r\n              killOptions.push([enemyHero, playerHero]);\r\n            }\r\n  \r\n            const distance = enemyHero.distanceCalculation(playerHero.position, this.boardSize);\r\n  \r\n            if ((damage > maxDamage) || (damage === maxDamage && distance < minDistance)) {\r\n              maxDamage = damage;\r\n              minDistance = distance;\r\n              targetEnemyHero = enemyHero;\r\n              targetPlayerHero = playerHero;\r\n            }\r\n          }\r\n        });\r\n      });\r\n  \r\n      if (killOptions.length) {\r\n        minDistance = Infinity;\r\n        targetEnemyHero = null;\r\n        targetPlayerHero = null;\r\n  \r\n        killOptions.forEach(([enemyHero, playerHero]) => {\r\n          const distance = enemyHero.distanceCalculation(playerHero.position, this.boardSize);\r\n  \r\n          if (distance < minDistance) {\r\n            minDistance = distance;\r\n            targetEnemyHero = enemyHero;\r\n            targetPlayerHero = playerHero;\r\n          }\r\n        });\r\n      }\r\n  \r\n      if (targetEnemyHero && targetPlayerHero) {\r\n        return { enemyHero: targetEnemyHero, playerHero: targetPlayerHero };\r\n      }\r\n  \r\n      return false;\r\n    }\r\n  \r\n    /**\r\n     * Расчет перемещения\r\n     *\r\n     * @returns {{enemyHero: PositionedCharacter, planMoveCell: number}}\r\n     */\r\n    calculatingMovement(positionedEnemyTeam, positionedPlayerTeam) {\r\n      const positionedCharacters = [...positionedEnemyTeam, ...positionedPlayerTeam];\r\n  \r\n      let minDistanceBeforeMoving = Infinity;\r\n      let minDistanceAfterMoving = Infinity;\r\n      let targetEnemyHero = null;\r\n      let targetPlanMoveCell = null;\r\n  \r\n      positionedEnemyTeam.forEach((enemyHero) => {\r\n        const moveableCells = enemyHero.generateMoveableCells(positionedCharacters, this.boardSize);\r\n  \r\n        positionedPlayerTeam.forEach((playerHero) => {\r\n          const distanceBeforeMoving = enemyHero.distanceCalculation(\r\n            playerHero.position,\r\n            this.boardSize,\r\n          );\r\n  \r\n          let distanceAfterMoving = Infinity;\r\n          let planMoveCell = null;\r\n  \r\n          moveableCells.forEach((cell) => {\r\n            const distance = playerHero.distanceCalculation(cell, this.boardSize);\r\n  \r\n            if (distance < distanceAfterMoving) {\r\n              distanceAfterMoving = distance;\r\n              planMoveCell = cell;\r\n            }\r\n          });\r\n  \r\n          if (\r\n            distanceBeforeMoving < minDistanceBeforeMoving || (\r\n              distanceBeforeMoving === minDistanceBeforeMoving\r\n              && distanceAfterMoving < minDistanceAfterMoving\r\n            )\r\n          ) {\r\n            minDistanceBeforeMoving = distanceBeforeMoving;\r\n            minDistanceAfterMoving = distanceAfterMoving;\r\n            targetEnemyHero = enemyHero;\r\n            targetPlanMoveCell = planMoveCell;\r\n          }\r\n        });\r\n      });\r\n  \r\n      return { enemyHero: targetEnemyHero, planMoveCell: targetPlanMoveCell };\r\n    }\r\n  \r\n    /**\r\n     * Расчет урона\r\n     *\r\n     * @param attacker атакующий персонаж\r\n     * @param target атакованный персонаж\r\n     * @returns number\r\n     */\r\n    static damageCalculation(attacker, target) {\r\n      const attackerAttack = attacker.character.attack;\r\n      const targetDefence = target.character.defence;\r\n  \r\n      const damageDifferance = attackerAttack - targetDefence;\r\n  \r\n      const damage = Math.max(damageDifferance, attackerAttack * 0.1);\r\n  \r\n      return Math.floor(damage);\r\n    }\r\n  }","import GamePlay from './GamePlay';\r\nimport PositionedCharacter from './PositionedCharacter';\r\nimport {\r\n  Bowman, Daemon, Magician, Swordsman, Undead, Vampire,\r\n} from './characters/characters';\r\nimport { generateTeam } from './generators';\r\nimport { randomInt } from './utils';\r\nimport cursors from './cursors';\r\nimport Computer from './Computer';\r\nimport GameState from './GameState';\r\nimport Team from './Team';\r\n\r\n/**\r\n * Класс, отвечающий за логику приложения\r\n *\r\n * @property gamePlay - объект, отвечающий за взаимодействие с HTML-страницей\r\n * @property gameState - объект, который хранит текущее состояние игры\r\n * @property computer - объект, отвечающий за действия компьютера\r\n * @property stateService - объект, который взаимодействует с текущим состоянием\r\n * @property playerTeam - команда игрока\r\n * @property positionedCharacters - массив персонажей, привязанных к координатам на поле\r\n * @property-read playerCharacterClasses - массив классов игрока\r\n * @property-read enemyCharacterClasses - массив классов противника\r\n */\r\nexport default class GameController {\r\n  /**\r\n   * Конструктор класса GameController\r\n   *\r\n   * @param gamePlay - объект, отвечающий за взаимодействие с HTML-страницей\r\n   * @param stateService - объект, который взаимодействует с текущим состоянием\r\n   */\r\n  constructor(gamePlay, stateService) {\r\n    this.gamePlay = gamePlay;\r\n    this.stateService = stateService;\r\n\r\n    this.computer = new Computer(this.gamePlay.boardSize);\r\n\r\n    // `writable: false`     - запретить присвоение\r\n    // `configurable: false` - запретить удаление\r\n    Object.defineProperties(this, {\r\n      playerCharacterClasses: {\r\n        value: [Bowman, Magician, Swordsman], writable: false, configurable: false,\r\n      },\r\n      enemyCharacterClasses: {\r\n        value: [Daemon, Undead, Vampire], writable: false, configurable: false,\r\n      },\r\n    });\r\n\r\n    this.addEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Добавляет слушателей событий\r\n   */\r\n  addEventListeners() {\r\n    this.gamePlay.addCellClickListener(this.onCellClick.bind(this));\r\n    this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this));\r\n    this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this));\r\n\r\n    this.gamePlay.addLoadGameListener(() => this.loadingGame());\r\n    this.gamePlay.addNewGameListener(() => this.init());\r\n    this.gamePlay.addSaveGameListener(() => this.savingGame());\r\n  }\r\n\r\n  /**\r\n   * Ответные действия компьютера\r\n   */\r\n  computerResponse() {\r\n    if (!this.gameState.isPlayer) {\r\n      const timeout = 500;\r\n\r\n      const computerAttack = this.computer.calculatingAttack(\r\n        this.gameState.positionedEnemyTeam,\r\n        this.gameState.positionedPlayerTeam,\r\n      );\r\n\r\n      if (computerAttack) {\r\n        this.gamePlay.selectCell(computerAttack.enemyHero.position);\r\n        this.selectedCharacter = computerAttack.enemyHero;\r\n\r\n        setTimeout(() => {\r\n          this.gamePlay.selectCell(computerAttack.playerHero.position, 'red');\r\n\r\n          setTimeout(() => { this.heroAttack(computerAttack.playerHero.position); }, timeout);\r\n        }, timeout);\r\n\r\n        return;\r\n      }\r\n\r\n      const computerMovement = this.computer.calculatingMovement(\r\n        this.gameState.positionedEnemyTeam,\r\n        this.gameState.positionedPlayerTeam,\r\n      );\r\n\r\n      this.gamePlay.selectCell(computerMovement.enemyHero.position);\r\n      this.selectedCharacter = computerMovement.enemyHero;\r\n\r\n      setTimeout(() => {\r\n        this.gamePlay.selectCell(computerMovement.planMoveCell, 'green');\r\n\r\n        setTimeout(() => { this.heroMovement(computerMovement.planMoveCell); }, timeout);\r\n      }, timeout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Завершение игры\r\n   */\r\n  gameOver() {\r\n    this.gameState.isOver = true;\r\n    this.gamePlay.redrawPositions(this.positionedCharacters);\r\n    this.gamePlay.setCursor(cursors.auto);\r\n\r\n    const isWin = this.gameState.positionedEnemyTeam.length === 0;\r\n\r\n    setTimeout(() => { GamePlay.showMessage(isWin ? 'Вы выиграли!' : 'Вы проиграли!'); }, 100);\r\n  }\r\n\r\n  /**\r\n   * Генерирует начальные возможные координаты на поле для игрока и противника\r\n   *\r\n   * @returns {{enemy: Array<number>, player: Array<number>}} - объект, содержавший два массива\r\n   * возможных координат на поле\r\n   */\r\n  generateInitialPositions() {\r\n    const positions = { player: [], enemy: [] };\r\n\r\n    for (let index = 0; index < this.gamePlay.boardSize; index += 1) {\r\n      const row = index * this.gamePlay.boardSize;\r\n\r\n      positions.player.push(row);\r\n      positions.player.push(row + 1);\r\n\r\n      positions.enemy.push(row + this.gamePlay.boardSize - 2);\r\n      positions.enemy.push(row + this.gamePlay.boardSize - 1);\r\n    }\r\n\r\n    return positions;\r\n  }\r\n\r\n  /**\r\n   * Атака героя\r\n   *\r\n   * @param index - координата на поле\r\n   */\r\n  heroAttack(index) {\r\n    const targetCharacterIndex = this.positionedCharacters.findIndex(\r\n      (hero) => hero.position === index,\r\n    );\r\n    const targetCharacter = this.positionedCharacters[targetCharacterIndex];\r\n\r\n    const damage = this.selectedCharacter.damageCalculation(targetCharacter);\r\n\r\n    this.gamePlay.showDamage(index, damage).then(() => {\r\n      targetCharacter.character.health -= damage;\r\n\r\n      if (targetCharacter.character.health <= 0) {\r\n        if (this.gameState.isPlayer) {\r\n          this.gameState.positionedEnemyTeam = this.gameState.positionedEnemyTeam.filter(\r\n            (hero) => hero !== targetCharacter,\r\n          );\r\n\r\n          this.positionedCharacters = [\r\n            ...this.gameState.positionedPlayerTeam,\r\n            ...this.gameState.positionedEnemyTeam,\r\n          ];\r\n\r\n          if (this.gameState.positionedEnemyTeam.length === 0) {\r\n            this.gamePlay.deselectCell(index);\r\n            this.gamePlay.deselectCell(this.selectedCharacter.position);\r\n            this.gamePlay.setCursor(cursors.auto);\r\n\r\n            this.selectedCharacter = undefined;\r\n\r\n            this.levelUp();\r\n\r\n            return;\r\n          }\r\n        } else {\r\n          this.gameState.positionedPlayerTeam = this.gameState.positionedPlayerTeam.filter(\r\n            (hero) => hero !== targetCharacter,\r\n          );\r\n\r\n          this.positionedCharacters = [\r\n            ...this.gameState.positionedPlayerTeam,\r\n            ...this.gameState.positionedEnemyTeam,\r\n          ];\r\n\r\n          if (this.gameState.positionedPlayerTeam.length === 0) {\r\n            this.gamePlay.deselectCell(index);\r\n            this.gamePlay.deselectCell(this.selectedCharacter.position);\r\n            this.gamePlay.setCursor(cursors.auto);\r\n\r\n            this.selectedCharacter = undefined;\r\n\r\n            this.gameOver();\r\n\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.gamePlay.redrawPositions(this.positionedCharacters);\r\n      this.gamePlay.deselectCell(index);\r\n      this.gamePlay.deselectCell(this.selectedCharacter.position);\r\n      this.gamePlay.setCursor(cursors.auto);\r\n\r\n      this.selectedCharacter = undefined;\r\n      this.gameState.isPlayer = !this.gameState.isPlayer;\r\n\r\n      this.computerResponse();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Перемещение героя\r\n   *\r\n   * @param index - координата на поле\r\n   */\r\n  heroMovement(index) {\r\n    const oldCharacterPosition = this.selectedCharacter.position;\r\n\r\n    this.selectedCharacter.position = index;\r\n\r\n    this.gamePlay.redrawPositions(this.positionedCharacters);\r\n    this.gamePlay.deselectCell(index);\r\n    this.gamePlay.deselectCell(oldCharacterPosition);\r\n    this.gamePlay.setCursor(cursors.auto);\r\n\r\n    this.selectedCharacter = undefined;\r\n    this.gameState.isPlayer = !this.gameState.isPlayer;\r\n\r\n    this.computerResponse();\r\n  }\r\n\r\n  /**\r\n   * Инициализация игры\r\n   */\r\n  init() {\r\n    this.gameState = new GameState();\r\n\r\n    const characterCount = 2;\r\n    const {\r\n      enemy: enemyInitPositions,\r\n      player: playerInitPositions,\r\n    } = this.generateInitialPositions();\r\n\r\n    this.playerTeam = generateTeam(\r\n      this.playerCharacterClasses,\r\n      this.gameState.level,\r\n      characterCount,\r\n    );\r\n    this.gameState.positionedPlayerTeam = this.constructor.positioningTeam(\r\n      this.playerTeam,\r\n      playerInitPositions,\r\n    );\r\n\r\n    this.enemyTeam = generateTeam(this.enemyCharacterClasses, this.gameState.level, characterCount);\r\n    this.gameState.positionedEnemyTeam = this.constructor.positioningTeam(\r\n      this.enemyTeam,\r\n      enemyInitPositions,\r\n    );\r\n\r\n    this.positionedCharacters = [\r\n      ...this.gameState.positionedPlayerTeam,\r\n      ...this.gameState.positionedEnemyTeam,\r\n    ];\r\n\r\n    this.gamePlay.drawUi(this.gameState.theme);\r\n    this.gamePlay.redrawPositions(this.positionedCharacters);\r\n    this.gamePlay.setCursor(cursors.auto);\r\n  }\r\n\r\n  /**\r\n   * Проверяет, является ли персонаж противником\r\n   *\r\n   * @param positionedCharacter - персонаж, привязанный к координате на поле\r\n   * @returns boolean\r\n   */\r\n  isEnemyCharacter(positionedCharacter) {\r\n    return positionedCharacter\r\n      && positionedCharacter.characterInstanceOf(this.enemyCharacterClasses);\r\n  }\r\n\r\n  /**\r\n   * Проверяет, является ли персонаж игроком\r\n   *\r\n   * @param positionedCharacter - персонаж, привязанный к координате на поле\r\n   * @returns boolean\r\n   */\r\n  isPlayerCharacter(positionedCharacter) {\r\n    return positionedCharacter\r\n      && positionedCharacter.characterInstanceOf(this.playerCharacterClasses);\r\n  }\r\n\r\n  /**\r\n   * Повышение уровня\r\n   */\r\n  levelUp() {\r\n    this.gameState.isPlayer = true;\r\n\r\n    if (this.gameState.level === 4) {\r\n      this.gameOver();\r\n\r\n      return;\r\n    }\r\n\r\n    this.gameState.level += 1;\r\n\r\n    this.gamePlay.drawUi(this.gameState.theme);\r\n\r\n    const characterCount = this.gameState.positionedPlayerTeam.length + 1;\r\n    const {\r\n      enemy: enemyInitPositions,\r\n      player: playerInitPositions,\r\n    } = this.generateInitialPositions();\r\n\r\n    this.playerTeam = generateTeam(this.playerCharacterClasses, this.gameState.level, 1);\r\n\r\n    this.gameState.positionedPlayerTeam.forEach((hero) => {\r\n      hero.character.levelUp();\r\n      this.playerTeam.addCharacter(hero.character);\r\n    });\r\n\r\n    this.gameState.positionedPlayerTeam = this.constructor.positioningTeam(\r\n      this.playerTeam,\r\n      playerInitPositions,\r\n    );\r\n\r\n    this.enemyTeam = generateTeam(this.enemyCharacterClasses, this.gameState.level, characterCount);\r\n    this.gameState.positionedEnemyTeam = this.constructor.positioningTeam(\r\n      this.enemyTeam,\r\n      enemyInitPositions,\r\n    );\r\n\r\n    this.positionedCharacters = [\r\n      ...this.gameState.positionedPlayerTeam,\r\n      ...this.gameState.positionedEnemyTeam,\r\n    ];\r\n\r\n    this.gamePlay.redrawPositions(this.positionedCharacters);\r\n  }\r\n\r\n  /**\r\n   * Загрузка игры из сохранения\r\n   *\r\n   * @returns boolean\r\n   */\r\n  loadingGame() {\r\n    const data = this.stateService.load();\r\n\r\n    if (!data) {\r\n      GamePlay.showMessage('Нет сохраненных игр');\r\n\r\n      return false;\r\n    }\r\n\r\n    this.gameState = GameState.from(data);\r\n\r\n    this.enemyTeam = new Team(this.gameState.positionedEnemyTeam.map(\r\n      (positionedCharacter) => positionedCharacter.character,\r\n    ));\r\n    this.playerTeam = new Team(this.gameState.positionedPlayerTeam.map(\r\n      (positionedCharacter) => positionedCharacter.character,\r\n    ));\r\n\r\n    this.positionedCharacters = [\r\n      ...this.gameState.positionedPlayerTeam,\r\n      ...this.gameState.positionedEnemyTeam,\r\n    ];\r\n\r\n    this.gamePlay.drawUi(this.gameState.theme);\r\n    this.gamePlay.redrawPositions(this.positionedCharacters);\r\n    this.gamePlay.setCursor(cursors.auto);\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Реакция на нажатие\r\n   *\r\n   * @param index - координата на поле\r\n   */\r\n  onCellClick(index) {\r\n    if (this.gameState.isOver) { return; }\r\n\r\n    if (this.gameState.isPlayer) {\r\n      const clickedCharacterElement = this.gamePlay.cells[index].querySelector('.character');\r\n      const clickedCharacter = this.positionedCharacters.find(\r\n        (element) => element.position === index,\r\n      );\r\n\r\n      if (this.gamePlay.cells[index].classList.contains('selected-green')) {\r\n        this.heroMovement(index);\r\n\r\n        return;\r\n      }\r\n\r\n      if (this.gamePlay.cells[index].classList.contains('selected-red')) {\r\n        this.heroAttack(index);\r\n\r\n        return;\r\n      }\r\n\r\n      if (clickedCharacterElement && this.isPlayerCharacter(clickedCharacter)) {\r\n        if (this.selectedCharacter) { this.gamePlay.deselectCell(this.selectedCharacter.position); }\r\n\r\n        this.gamePlay.selectCell(index);\r\n        this.selectedCharacter = clickedCharacter;\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    GamePlay.showError('Вы не выбрали персонажа или делаете недоступный Вам ход');\r\n  }\r\n\r\n  /**\r\n   * Реакция на наведение мыши\r\n   *\r\n   * @param index - координата на поле\r\n   */\r\n  onCellEnter(index) {\r\n    if (this.gameState.isOver) { return; }\r\n\r\n    const enteredCharacterElement = this.gamePlay.cells[index].querySelector('.character');\r\n    const enteredCharacter = this.positionedCharacters.find(\r\n      (element) => element.position === index,\r\n    );\r\n\r\n    if (enteredCharacterElement) {\r\n      this.gamePlay.showCellTooltip(enteredCharacter.character.briefInformation, index);\r\n    }\r\n\r\n    if (this.gameState.isPlayer) {\r\n      switch (true) {\r\n        case (enteredCharacterElement && this.isPlayerCharacter(enteredCharacter)): {\r\n          this.gamePlay.setCursor(cursors.pointer);\r\n          break;\r\n        }\r\n        case (\r\n          enteredCharacterElement\r\n          && this.isEnemyCharacter(enteredCharacter)\r\n          && Boolean(this.selectedCharacter)\r\n          && this.selectedCharacter.canAttack(index, this.gamePlay.boardSize)\r\n        ): {\r\n          this.gamePlay.selectCell(index, 'red');\r\n          this.gamePlay.setCursor(cursors.crosshair);\r\n          break;\r\n        }\r\n        case (\r\n          !enteredCharacterElement\r\n          && Boolean(this.selectedCharacter)\r\n          && this.selectedCharacter.canMove(index, this.gamePlay.boardSize)\r\n        ): {\r\n          this.gamePlay.selectCell(index, 'green');\r\n          this.gamePlay.setCursor(cursors.pointer);\r\n          break;\r\n        }\r\n        case Boolean(this.selectedCharacter): {\r\n          this.gamePlay.setCursor(cursors.notallowed);\r\n          break;\r\n        }\r\n        default: { this.gamePlay.setCursor(cursors.auto); }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Реакция на сведение мыши\r\n   *\r\n   * @param index - координата на поле\r\n   */\r\n  onCellLeave(index) {\r\n    this.gamePlay.hideCellTooltip(index);\r\n\r\n    if (!this.gamePlay.cells[index].classList.contains('selected-yellow')) { this.gamePlay.deselectCell(index); }\r\n  }\r\n\r\n  /**\r\n   * Расставляет персонажей команды на доступные позиции\r\n   *\r\n   * @param team - команда\r\n   * @param positions - массив координат на поле\r\n   * @returns Array<PositionedCharacter> - массив персонажей, привязанных к координатам на поле\r\n   */\r\n  static positioningTeam(team, positions) {\r\n    const positionedTeam = [];\r\n\r\n    team.characters.forEach((character) => {\r\n      const index = randomInt(positions.length);\r\n\r\n      positionedTeam.push(new PositionedCharacter(character, positions[index]));\r\n      positions.splice(index, 1);\r\n    });\r\n\r\n    return positionedTeam;\r\n  }\r\n\r\n  /**\r\n   * Сохранение игры\r\n   */\r\n  savingGame() {\r\n    this.stateService.save(this.gameState);\r\n\r\n    GamePlay.showMessage('Игра сохранена');\r\n  }\r\n}","import { calcHealthLevel, calcTileType } from './utils';\r\n\r\n/**\r\n * Класс, отвечающий за взаимодействие с HTML-страницей\r\n */\r\nexport default class GamePlay {\r\n  /**\r\n   * Конструктор класса GamePlay\r\n   */\r\n  constructor() {\r\n    this.boardSize = 8;\r\n    this.container = null;\r\n    this.boardEl = null;\r\n    this.cells = [];\r\n    this.cellClickListeners = [];\r\n    this.cellEnterListeners = [];\r\n    this.cellLeaveListeners = [];\r\n    this.newGameListeners = [];\r\n    this.saveGameListeners = [];\r\n    this.loadGameListeners = [];\r\n  }\r\n\r\n  /**\r\n   * Add listener to mouse click for cell\r\n   *\r\n   * @param callback\r\n   */\r\n  addCellClickListener(callback) { this.cellClickListeners.push(callback); }\r\n\r\n  /**\r\n   * Add listener to mouse enter for cell\r\n   *\r\n   * @param callback\r\n   */\r\n  addCellEnterListener(callback) { this.cellEnterListeners.push(callback); }\r\n\r\n  /**\r\n   * Add listener to mouse leave for cell\r\n   *\r\n   * @param callback\r\n   */\r\n  addCellLeaveListener(callback) { this.cellLeaveListeners.push(callback); }\r\n\r\n  /**\r\n   * Add listener to \"Load Game\" button click\r\n   *\r\n   * @param callback\r\n   */\r\n  addLoadGameListener(callback) { this.loadGameListeners.push(callback); }\r\n\r\n  /**\r\n   * Add listener to \"New Game\" button click\r\n   *\r\n   * @param callback\r\n   */\r\n  addNewGameListener(callback) { this.newGameListeners.push(callback); }\r\n\r\n  /**\r\n   * Add listener to \"Save Game\" button click\r\n   *\r\n   * @param callback\r\n   */\r\n  addSaveGameListener(callback) { this.saveGameListeners.push(callback); }\r\n\r\n  bindToDOM(container) {\r\n    if (!(container instanceof HTMLElement)) { throw new Error('container is not HTMLElement'); }\r\n\r\n    this.container = container;\r\n  }\r\n\r\n  checkBinding() { if (this.container === null) { throw new Error('GamePlay not bind to DOM'); } }\r\n\r\n  deselectCell(index) {\r\n    const cell = this.cells[index];\r\n\r\n    cell.classList.remove(...Array.from(cell.classList).filter((o) => o.startsWith('selected')));\r\n  }\r\n\r\n  /**\r\n   * Draws boardEl with specific theme\r\n   *\r\n   * @param theme\r\n   */\r\n  drawUi(theme) {\r\n    this.checkBinding();\r\n\r\n    this.container.innerHTML = `\r\n      <div class=\"controls\">\r\n        <button data-id=\"action-restart\" class=\"btn\">New Game</button>\r\n        <button data-id=\"action-save\" class=\"btn\">Save Game</button>\r\n        <button data-id=\"action-load\" class=\"btn\">Load Game</button>\r\n      </div>\r\n      <div class=\"board-container\">\r\n        <div data-id=\"board\" class=\"board\"></div>\r\n      </div>\r\n    `;\r\n\r\n    this.newGameEl = this.container.querySelector('[data-id=action-restart]');\r\n    this.saveGameEl = this.container.querySelector('[data-id=action-save]');\r\n    this.loadGameEl = this.container.querySelector('[data-id=action-load]');\r\n\r\n    this.newGameEl.addEventListener('click', (event) => this.onNewGameClick(event));\r\n    this.saveGameEl.addEventListener('click', (event) => this.onSaveGameClick(event));\r\n    this.loadGameEl.addEventListener('click', (event) => this.onLoadGameClick(event));\r\n\r\n    this.boardEl = this.container.querySelector('[data-id=board]');\r\n\r\n    this.boardEl.classList.add(theme);\r\n\r\n    for (let i = 0; i < this.boardSize ** 2; i += 1) {\r\n      const cellEl = document.createElement('div');\r\n\r\n      cellEl.classList.add('cell', 'map-tile', `map-tile-${calcTileType(i, this.boardSize)}`);\r\n      cellEl.addEventListener('mouseenter', (event) => this.onCellEnter(event));\r\n      cellEl.addEventListener('mouseleave', (event) => this.onCellLeave(event));\r\n      cellEl.addEventListener('click', (event) => this.onCellClick(event));\r\n\r\n      this.boardEl.appendChild(cellEl);\r\n    }\r\n\r\n    this.cells = Array.from(this.boardEl.children);\r\n  }\r\n\r\n  hideCellTooltip(index) { this.cells[index].title = ''; }\r\n\r\n  onCellClick(event) {\r\n    const index = this.cells.indexOf(event.currentTarget);\r\n\r\n    this.cellClickListeners.forEach((o) => o.call(null, index));\r\n  }\r\n\r\n  onCellEnter(event) {\r\n    event.preventDefault();\r\n\r\n    const index = this.cells.indexOf(event.currentTarget);\r\n\r\n    this.cellEnterListeners.forEach((o) => o.call(null, index));\r\n  }\r\n\r\n  onCellLeave(event) {\r\n    event.preventDefault();\r\n\r\n    const index = this.cells.indexOf(event.currentTarget);\r\n\r\n    this.cellLeaveListeners.forEach((o) => o.call(null, index));\r\n  }\r\n\r\n  onLoadGameClick(event) {\r\n    event.preventDefault();\r\n\r\n    this.loadGameListeners.forEach((o) => o.call(null));\r\n  }\r\n\r\n  onNewGameClick(event) {\r\n    event.preventDefault();\r\n\r\n    this.newGameListeners.forEach((o) => o.call(null));\r\n  }\r\n\r\n  onSaveGameClick(event) {\r\n    event.preventDefault();\r\n\r\n    this.saveGameListeners.forEach((o) => o.call(null));\r\n  }\r\n\r\n  /**\r\n   * Draws positions (with chars) on boardEl\r\n   *\r\n   * @param positions array of PositionedCharacter objects\r\n   */\r\n  redrawPositions(positions) {\r\n    for (let cellIndex = 0; cellIndex < this.cells.length; cellIndex += 1) {\r\n      this.cells[cellIndex].innerHTML = '';\r\n    }\r\n\r\n    positions.forEach((position) => {\r\n      const cellEl = this.boardEl.children[position.position];\r\n      const charEl = document.createElement('div');\r\n      charEl.classList.add('character', position.character.type);\r\n\r\n      const healthEl = document.createElement('div');\r\n      healthEl.classList.add('health-level');\r\n\r\n      const healthIndicatorEl = document.createElement('div');\r\n      healthIndicatorEl.classList.add('health-level-indicator', `health-level-indicator-${calcHealthLevel(position.character.health)}`);\r\n      healthIndicatorEl.style.width = `${position.character.health}%`;\r\n      healthEl.appendChild(healthIndicatorEl);\r\n\r\n      charEl.appendChild(healthEl);\r\n      cellEl.appendChild(charEl);\r\n    });\r\n  }\r\n\r\n  selectCell(index, color = 'yellow') {\r\n    this.deselectCell(index);\r\n\r\n    this.cells[index].classList.add('selected', `selected-${color}`);\r\n  }\r\n\r\n  setCursor(cursor) { this.boardEl.style.cursor = cursor; }\r\n\r\n  showCellTooltip(message, index) { this.cells[index].title = message; }\r\n\r\n  showDamage(index, damage) {\r\n    return new Promise((resolve) => {\r\n      const cell = this.cells[index];\r\n\r\n      const damageEl = document.createElement('span');\r\n      damageEl.textContent = damage;\r\n      damageEl.classList.add('damage');\r\n\r\n      cell.appendChild(damageEl);\r\n\r\n      damageEl.addEventListener('animationend', () => {\r\n        cell.removeChild(damageEl);\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  static showError(message) { alert(message); } // eslint-disable-line no-alert\r\n\r\n  static showMessage(message) { alert(message); } // eslint-disable-line no-alert\r\n}","import PositionedCharacter from './PositionedCharacter';\r\nimport themes from './themes';\r\nimport {\r\n  Bowman, Daemon, Magician, Swordsman, Undead, Vampire,\r\n} from './characters/characters';\r\n\r\n/**\r\n * Класс, который хранит текущее состояние игры (может сам себя воссоздавать из другого объекта)\r\n *\r\n * @property isOver - закончена ли игра\r\n * @property isPlayer - идет ли сейчас ход игрока\r\n * @property level - уровень игры\r\n * @property positionedEnemyTeam - массив персонажей противника, привязанных к координатам на поле\r\n * @property positionedPlayerTeam - массив персонажей игрока, привязанных к координатам на поле\r\n */\r\nexport default class GameState {\r\n  /**\r\n   * Конструктор класса GameState\r\n   */\r\n  constructor() {\r\n    this.isOver = false;\r\n    this.isPlayer = true;\r\n    this.level = 1;\r\n    this.positionedEnemyTeam = [];\r\n    this.positionedPlayerTeam = [];\r\n  }\r\n\r\n  /**\r\n   * Создает из объекта класс GameState\r\n   *\r\n   * @param object\r\n   * @returns GameState\r\n   */\r\n  static from(object) {\r\n    const characterTypes = {\r\n      bowman: Bowman,\r\n      daemon: Daemon,\r\n      magician: Magician,\r\n      swordsman: Swordsman,\r\n      undead: Undead,\r\n      vampire: Vampire,\r\n    };\r\n\r\n    const createCharacter = (characterData) => {\r\n      const CharacterClass = characterTypes[characterData.type];\r\n\r\n      if (!CharacterClass) {\r\n        throw new Error('Неизвестный тип персонажа');\r\n      }\r\n\r\n      const character = new CharacterClass(characterData.level);\r\n\r\n      character.attack = characterData.attack;\r\n      character.defence = characterData.defence;\r\n      character.health = characterData.health;\r\n\r\n      return character;\r\n    };\r\n\r\n    const gameState = new GameState();\r\n\r\n    gameState.isOver = object.isOver;\r\n    gameState.isPlayer = object.isPlayer;\r\n    gameState.level = object.level;\r\n    gameState.positionedEnemyTeam = object.positionedEnemyTeam.map((positionedCharacter) => {\r\n      const character = createCharacter(positionedCharacter.character);\r\n\r\n      return new PositionedCharacter(character, positionedCharacter.position);\r\n    });\r\n    gameState.positionedPlayerTeam = object.positionedPlayerTeam.map((positionedCharacter) => {\r\n      const character = createCharacter(positionedCharacter.character);\r\n\r\n      return new PositionedCharacter(character, positionedCharacter.position);\r\n    });\r\n\r\n    return gameState;\r\n  }\r\n\r\n  /**\r\n   * Тема игры\r\n   *\r\n   * @returns string\r\n   */\r\n  get theme() {\r\n    switch (this.level) {\r\n      case 1: {\r\n        return themes.prairie;\r\n      }\r\n      case 2: {\r\n        return themes.desert;\r\n      }\r\n      case 3: {\r\n        return themes.arctic;\r\n      }\r\n      case 4: {\r\n        return themes.mountain;\r\n      }\r\n      default: {\r\n        throw new Error('Unknown level');\r\n      }\r\n    }\r\n  }\r\n}","export default class GameStateService {\r\n  constructor(storage) {\r\n    this.storage = storage;\r\n  }\r\n\r\n  save(state) {\r\n    this.storage.setItem('state', JSON.stringify(state));\r\n  }\r\n\r\n  load() {\r\n    try {\r\n      return JSON.parse(this.storage.getItem('state'));\r\n    } catch (e) {\r\n      throw new Error('Invalid state');\r\n    }\r\n  }\r\n}\r\n","import Character from './Character';\r\n\r\n/**\r\n * Персонаж, привязанный к координате на поле\r\n *\r\n * @property character - персонаж\r\n * @property position - координата на поле\r\n */\r\nexport default class PositionedCharacter {\r\n  /**\r\n   * Конструктор класса PositionedCharacter\r\n   *\r\n   * @param character - персонаж\r\n   * @param position - координата на поле\r\n   */\r\n  constructor(character, position) {\r\n    if (!(character instanceof Character)) { throw new Error('character must be instance of Character or its children'); }\r\n\r\n    if (typeof position !== 'number') { throw new Error('position must be a number'); }\r\n\r\n    this.character = character;\r\n    this.position = position;\r\n  }\r\n\r\n  /**\r\n   * Разбивает координату на поле на отдельные показатели согласно размеру поля\r\n   *\r\n   * @param position - координата на поле\r\n   * @param boardSize - размер поля\r\n   * @returns {{x: number, y: number}} - полученные показатели координаты\r\n   */\r\n  static breakdownIntoCoordinates(position, boardSize) {\r\n    return { x: position % boardSize, y: Math.floor(position / boardSize) };\r\n  }\r\n\r\n  /**\r\n   * Определяет, может ли персонаж атаковать\r\n   *\r\n   * @param targetPosition - целевая координата на поле\r\n   * @param boardSize - размер поля\r\n   * @returns boolean\r\n   */\r\n  canAttack(targetPosition, boardSize) {\r\n    if (targetPosition === this.position) { return false; }\r\n\r\n    const thisCoordinates = this.constructor.breakdownIntoCoordinates(this.position, boardSize);\r\n    const targetCoordinates = this.constructor.breakdownIntoCoordinates(targetPosition, boardSize);\r\n\r\n    const xDifference = Math.abs(thisCoordinates.x - targetCoordinates.x);\r\n    const yDifference = Math.abs(thisCoordinates.y - targetCoordinates.y);\r\n\r\n    return xDifference <= this.character.attackRange && yDifference <= this.character.attackRange;\r\n  }\r\n\r\n  /**\r\n   * Определяет, может ли персонаж переместиться\r\n   *\r\n   * @param targetPosition - целевая координата на поле\r\n   * @param boardSize - размер поля\r\n   * @returns boolean\r\n   */\r\n  canMove(targetPosition, boardSize) {\r\n    if (targetPosition === this.position) { return false; }\r\n\r\n    const thisCoordinates = this.constructor.breakdownIntoCoordinates(this.position, boardSize);\r\n    const targetCoordinates = this.constructor.breakdownIntoCoordinates(targetPosition, boardSize);\r\n\r\n    const xDifference = Math.abs(thisCoordinates.x - targetCoordinates.x);\r\n    const yDifference = Math.abs(thisCoordinates.y - targetCoordinates.y);\r\n\r\n    return xDifference <= this.character.moveRange && yDifference <= this.character.moveRange\r\n      && (xDifference === 0 || yDifference === 0 || xDifference === yDifference);\r\n  }\r\n\r\n  /**\r\n   * Определяет принадлежность персонажа классу\r\n   *\r\n   * @param Class - один класс или массив классов\r\n   * @returns boolean\r\n   */\r\n  characterInstanceOf(Class) {\r\n    if (Array.isArray(Class)) {\r\n      return Boolean(Class.filter((c) => this.character instanceof c).length);\r\n    }\r\n\r\n    return this.character instanceof Class;\r\n  }\r\n\r\n  /**\r\n   * Расчет урона\r\n   *\r\n   * @param target - атакованный персонаж\r\n   * @returns number - урон\r\n   */\r\n  damageCalculation(target) {\r\n    const attackerAttack = this.character.attack;\r\n    const targetDefence = target.character.defence;\r\n\r\n    const damageDifferance = attackerAttack - targetDefence;\r\n\r\n    const damage = Math.max(damageDifferance, attackerAttack * 0.1);\r\n\r\n    return Math.floor(damage);\r\n  }\r\n\r\n  /**\r\n   * Расчет дистанции\r\n   *\r\n   * @param targetPosition - целевая координата на поле\r\n   * @param boardSize - размер поля\r\n   * @returns number - дистанция\r\n   */\r\n  distanceCalculation(targetPosition, boardSize) {\r\n    const thisCoordinates = this.constructor.breakdownIntoCoordinates(this.position, boardSize);\r\n    const targetCoordinates = this.constructor.breakdownIntoCoordinates(targetPosition, boardSize);\r\n\r\n    const xDifference = Math.abs(thisCoordinates.x - targetCoordinates.x);\r\n    const yDifference = Math.abs(thisCoordinates.y - targetCoordinates.y);\r\n\r\n    return xDifference + yDifference;\r\n  }\r\n\r\n  /**\r\n   * Генерирует доступные для перемещения клетки\r\n   *\r\n   * @param positionedCharacters - массив персонажей, привязанных к координатам на поле\r\n   * @param boardSize - размер поля\r\n   * @returns Array<number> - массив координат на поле\r\n   */\r\n  generateMoveableCells(positionedCharacters, boardSize) {\r\n    const availableCells = [];\r\n    const initialLimit = 0;\r\n    const finalLimit = boardSize - 1;\r\n    const occupiedCells = positionedCharacters.map((hero) => hero.position);\r\n    const { x, y } = this.constructor.breakdownIntoCoordinates(this.position, boardSize);\r\n\r\n    for (let index = 1; index <= this.character.moveRange; index += 1) {\r\n      const xLeft = x - index;\r\n      const xRight = x + index;\r\n      const yBottom = y + index;\r\n      const yTop = y - index;\r\n\r\n      const coordinates = [\r\n        { x, y: yBottom },\r\n        { x, y: yTop },\r\n        { x: xLeft, y },\r\n        { x: xLeft, y: yBottom },\r\n        { x: xLeft, y: yTop },\r\n        { x: xRight, y },\r\n        { x: xRight, y: yBottom },\r\n        { x: xRight, y: yTop },\r\n      ];\r\n\r\n      coordinates.forEach((coordinate) => {\r\n        const cell = coordinate.y * boardSize + coordinate.x;\r\n\r\n        if (\r\n          coordinate.x >= initialLimit\r\n          && coordinate.x <= finalLimit\r\n          && coordinate.y >= initialLimit\r\n          && coordinate.y <= finalLimit\r\n          && !occupiedCells.includes(cell)\r\n        ) {\r\n          availableCells.push(cell);\r\n        }\r\n      });\r\n    }\r\n\r\n    return availableCells;\r\n  }\r\n}","/**\r\n * Класс для команды (набор персонажей), представляющих компьютер и игрока\r\n *\r\n * @property characters - массив персонажей\r\n *\r\n * @example\r\n * ```js\r\n * const characters = [new Swordsman(2), new Bowman(1)]\r\n * const team = new Team(characters);\r\n *\r\n * team.characters // [swordsman, bowman]\r\n * ```\r\n * */\r\nexport default class Team {\r\n  /**\r\n   * Конструктор класса Team\r\n   *\r\n   * @param characters - массив персонажей\r\n   */\r\n  constructor(characters = []) { this.characters = characters; }\r\n\r\n  /**\r\n   * Добавление персонажа\r\n   *\r\n   * @param character - персонаж\r\n   */\r\n  addCharacter(character) { this.characters.push(character); }\r\n}","/**\r\n * Entry point of app: don't change this\r\n */\r\nimport GamePlay from './GamePlay';\r\nimport GameController from './GameController';\r\nimport GameStateService from './GameStateService';\r\n\r\nconst gamePlay = new GamePlay();\r\ngamePlay.bindToDOM(document.querySelector('#game-container'));\r\n\r\nconst stateService = new GameStateService(localStorage);\r\n\r\nconst gameCtrl = new GameController(gamePlay, stateService);\r\ngameCtrl.init();\r\n\r\n// don't write your code here\r\n","const characterTypes = {\r\n\tbowman: 'bowman',\r\n\tswordsman: 'swordsman',\r\n\tmagician: 'magician',\r\n\tvampire: 'vampire',\r\n\tundead: 'undead',\r\n\tdaemon: 'daemon',\r\n};\r\n\r\nexport default characterTypes;","import Character from '../Character';\r\nimport characterTypes from '../characterTypes';\r\n\r\nexport default class Bowman extends Character {\r\n\tconstructor(level) {\r\n\t\tsuper(1, characterTypes.bowman);\r\n\t\tthis.attack = 25;\r\n\t\tthis.defence = 25;\r\n\r\n\t\tfor(let index = 1; index < level; index += 1) {\r\n\t\t\tthis.levelUp();\r\n\t\t}\r\n\r\n\t\tObject.defineProperties(this, {\r\n\t\t\tattackRange: { value: 2, writable: false, configurable: false },\r\n\t\t\tmoveRange: { value: 2, writable: false, configurable: false },\r\n\t\t});\r\n\t}\r\n}","import Character from '../Character';\r\nimport characterTypes from '../characterTypes';\r\n\r\nexport default class Daemon extends Character {\r\n\tconstructor(level) {\r\n\t\tsuper(1, characterTypes.daemon);\r\n\t\tthis.attack = 10;\r\n\t\tthis.defence = 10;\r\n\r\n\t\tfor(let index = 1; index < level; index += 1) {\r\n\t\t\tthis.levelUp();\r\n\t\t}\r\n\r\n\t\tObject.defineProperties(this, {\r\n\t\t\tattackRange: { value: 4, writable: false, configurable: false },\r\n\t\t\tmoveRange: { value: 1, writable: false, configurable: false },\r\n\t\t})\r\n\t}\r\n}","import Character from '../Character';\r\nimport characterTypes from '../characterTypes';\r\n\r\nexport default class Magician extends Character {\r\n\tconstructor(level) {\r\n\t\tsuper(1, characterTypes.magician);\r\n\t\tthis.attack = 10;\r\n\t\tthis.defence = 40;\r\n\r\n\t\tfor(let index = 1; index < level; index += 1) {\r\n\t\t\tthis.levelUp();\r\n\t\t}\r\n\r\n\t\tObject.defineProperties(this, {\r\n\t\t\tattackRange: { value: 4, writable: false, configurable: false },\r\n\t\t\tmoveRange: { value: 1, writable: false, configurable: false },\r\n\t\t})\r\n\t}\r\n}","import Character from '../Character';\r\nimport characterTypes from '../characterTypes';\r\n\r\nexport default class Swordsman extends Character {\r\n\tconstructor(level) {\r\n\t\tsuper(1, characterTypes.swordsman);\r\n\t\tthis.attack = 40;\r\n\t\tthis.defence = 10;\r\n\r\n\t\tfor(let index = 1; index < level; index += 1) {\r\n\t\t\tthis.levelUp();\r\n\t\t}\r\n\r\n\t\tObject.defineProperties(this, {\r\n\t\t\tattackRange: { value: 1, writable: false, configurable: false },\r\n\t\t\tmoveRange: { value: 4, writable: false, configurable: false },\r\n\t\t})\r\n\t}\r\n}","import Character from '../Character';\r\nimport characterTypes from '../characterTypes';\r\n\r\nexport default class Undead extends Character {\r\n\tconstructor(level) {\r\n\t\tsuper(1, characterTypes.undead);\r\n\t\tthis.attack = 40;\r\n\t\tthis.defence = 10;\r\n\r\n\t\tfor(let index = 1; index < level; index += 1) {\r\n\t\t\tthis.levelUp();\r\n\t\t}\r\n\r\n\t\tObject.defineProperties(this, {\r\n\t\t\tattackRange: { value: 1, writable: false, configurable: false },\r\n\t\t\tmoveRange: { value: 4, writable: false, configurable: false },\r\n\t\t})\r\n\t}\r\n}","import Character from '../Character';\r\nimport characterTypes from '../characterTypes';\r\n\r\nexport default class Vampire extends Character {\r\n\tconstructor(level) {\r\n\t\tsuper(1, characterTypes.vampire);\r\n\t\tthis.attack = 25;\r\n\t\tthis.defence = 25;\r\n\r\n\t\tfor(let index = 1; index < level; index += 1) {\r\n\t\t\tthis.levelUp();\r\n\t\t}\r\n\r\n\t\tObject.defineProperties(this, {\r\n\t\t\tattackRange: { value: 2, writable: false, configurable: false },\r\n\t\t\tmoveRange: { value: 2, writable: false, configurable: false },\r\n\t\t})\r\n\t}\r\n}","import Bowman from './Bowman';\r\nimport Daemon from './Daemon';\r\nimport Magician from './Magician';\r\nimport Swordsman from './Swordsman';\r\nimport Undead from './Undead';\r\nimport Vampire from './Vampire';\r\n\r\nexport {\r\n    Bowman,\r\n    Daemon,\r\n    Magician,\r\n    Swordsman,\r\n    Undead,\r\n    Vampire,\r\n};","const cursors = {\r\n  auto: 'auto',\r\n  pointer: 'pointer',\r\n  crosshair: 'crosshair',\r\n  notallowed: 'not-allowed',\r\n};\r\n\r\nexport default cursors;\r\n","import Team from './Team';\r\nimport { randomInt } from './utils';\r\n\r\n/**\r\n * Формирует экземпляр персонажа из массива allowedTypes со случайным уровнем от 1 до maxLevel\r\n *\r\n * @param allowedTypes массив классов\r\n * @param maxLevel максимальный возможный уровень персонажа\r\n * @returns генератор, который при каждом вызове возвращает новый экземпляр класса персонажа\r\n */\r\nexport function* characterGenerator(allowedTypes, maxLevel) {\r\n  // TODO: write logic here\r\n  while (true) {\r\n    const characterClassIndex = randomInt(allowedTypes.length);\r\n    const characterLevel = randomInt(maxLevel) + 1;\r\n\r\n    yield new allowedTypes[characterClassIndex](characterLevel);\r\n  }\r\n}\r\n\r\n/**\r\n * Формирует массив персонажей на основе characterGenerator\r\n *\r\n * @param allowedTypes массив классов\r\n * @param maxLevel максимальный возможный уровень персонажа\r\n * @param characterCount количество персонажей, которое нужно сформировать\r\n * @returns экземпляр Team, хранящий экземпляры персонажей. Количество персонажей в команде -\r\n * characterCount\r\n */\r\nexport function generateTeam(allowedTypes, maxLevel, characterCount) {\r\n  // TODO: write logic here\r\n  const characters = [];\r\n  const playerGenerator = characterGenerator(allowedTypes, maxLevel);\r\n\r\n  for (let index = 0; index < characterCount; index += 1) {\r\n    characters.push(playerGenerator.next().value);\r\n  }\r\n\r\n  return new Team(characters);\r\n}","const themes = {\r\n  prairie: 'prairie',\r\n  desert: 'desert',\r\n  arctic: 'arctic',\r\n  mountain: 'mountain',\r\n};\r\n\r\nexport default themes;\r\n","/**\r\n * @todo\r\n * @param index - индекс поля\r\n * @param boardSize - размер квадратного поля (в длину или ширину)\r\n * @returns строка - тип ячейки на поле:\r\n *\r\n * top-left\r\n * top-right\r\n * top\r\n * bottom-left\r\n * bottom-right\r\n * bottom\r\n * right\r\n * left\r\n * center\r\n *\r\n * @example\r\n * ```js\r\n * calcTileType(0, 8); // 'top-left'\r\n * calcTileType(1, 8); // 'top'\r\n * calcTileType(63, 8); // 'bottom-right'\r\n * calcTileType(7, 7); // 'left'\r\n * ```\r\n * */\r\nexport function calcTileType(index, boardSize) {\r\n  // TODO: ваш код будет тут\r\n  const topRow = index < boardSize;\r\n  const bottomRow = index >= boardSize * (boardSize - 1);\r\n  const leftColumn = index % boardSize === 0;\r\n  const rightColumn = index % boardSize === boardSize - 1;\r\n\r\n  switch (true) {\r\n  case topRow && leftColumn:\r\n    return 'top-left';\r\n\r\n  case topRow && rightColumn:\r\n    return 'top-right';\r\n\r\n  case bottomRow && leftColumn:\r\n    return 'bottom-left';\r\n\r\n  case bottomRow && rightColumn:\r\n    return 'bottom-right';\r\n\r\n  case topRow && !(leftColumn || rightColumn):\r\n    return 'top';\r\n\r\n  case bottomRow && !(leftColumn || rightColumn):\r\n    return 'bottom';\r\n\r\n  case !(topRow || bottomRow) && rightColumn:\r\n    return 'right';\r\n\r\n  case !(topRow || bottomRow) && leftColumn:\r\n    return 'left';\r\n\r\n  default:\r\n    return 'center'; \r\n  }\r\n}\r\n\r\nexport function calcHealthLevel(health) {\r\n  if (health < 15) {\r\n    return 'critical';\r\n  }\r\n\r\n  if (health < 50) {\r\n    return 'normal';\r\n  }\r\n\r\n  return 'high';\r\n}\r\n\r\nexport function randomInt(range) {\r\n  return Math.floor(Math.random() * range);\r\n}","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './css/style.css';\r\nimport './js/app';\r\n\r\n// Точка входа webpack\r\n// Не пишите код в данном файле\r\n"],"names":["Character","constructor","level","type","attack","defence","health","new","target","name","Error","briefInformation","levelUp","Math","floor","max","min","Computer","boardSize","calculatingAttack","positionedEnemyTeam","positionedPlayerTeam","killOptions","maxDamage","Infinity","minDistance","targetEnemyHero","targetPlayerHero","forEach","enemyHero","playerHero","canAttack","position","damage","damageCalculation","character","push","distance","distanceCalculation","length","calculatingMovement","positionedCharacters","minDistanceBeforeMoving","minDistanceAfterMoving","targetPlanMoveCell","moveableCells","generateMoveableCells","distanceBeforeMoving","distanceAfterMoving","planMoveCell","cell","attacker","attackerAttack","targetDefence","damageDifferance","GamePlay","PositionedCharacter","Bowman","Daemon","Magician","Swordsman","Undead","Vampire","generateTeam","randomInt","cursors","GameState","Team","GameController","gamePlay","stateService","computer","Object","defineProperties","playerCharacterClasses","value","writable","configurable","enemyCharacterClasses","addEventListeners","addCellClickListener","onCellClick","bind","addCellEnterListener","onCellEnter","addCellLeaveListener","onCellLeave","addLoadGameListener","loadingGame","addNewGameListener","init","addSaveGameListener","savingGame","computerResponse","gameState","isPlayer","timeout","computerAttack","selectCell","selectedCharacter","setTimeout","heroAttack","computerMovement","heroMovement","gameOver","isOver","redrawPositions","setCursor","auto","isWin","showMessage","generateInitialPositions","positions","player","enemy","index","row","targetCharacterIndex","findIndex","hero","targetCharacter","showDamage","then","filter","deselectCell","undefined","oldCharacterPosition","characterCount","enemyInitPositions","playerInitPositions","playerTeam","positioningTeam","enemyTeam","drawUi","theme","isEnemyCharacter","positionedCharacter","characterInstanceOf","isPlayerCharacter","addCharacter","data","load","from","map","clickedCharacterElement","cells","querySelector","clickedCharacter","find","element","classList","contains","showError","enteredCharacterElement","enteredCharacter","showCellTooltip","pointer","Boolean","crosshair","canMove","notallowed","hideCellTooltip","team","positionedTeam","characters","splice","save","calcHealthLevel","calcTileType","container","boardEl","cellClickListeners","cellEnterListeners","cellLeaveListeners","newGameListeners","saveGameListeners","loadGameListeners","callback","bindToDOM","HTMLElement","checkBinding","remove","Array","o","startsWith","innerHTML","newGameEl","saveGameEl","loadGameEl","addEventListener","event","onNewGameClick","onSaveGameClick","onLoadGameClick","add","i","cellEl","document","createElement","appendChild","children","title","indexOf","currentTarget","call","preventDefault","cellIndex","charEl","healthEl","healthIndicatorEl","style","width","color","cursor","message","Promise","resolve","damageEl","textContent","removeChild","alert","themes","object","characterTypes","bowman","daemon","magician","swordsman","undead","vampire","createCharacter","characterData","CharacterClass","prairie","desert","arctic","mountain","GameStateService","storage","state","setItem","JSON","stringify","parse","getItem","e","breakdownIntoCoordinates","x","y","targetPosition","thisCoordinates","targetCoordinates","xDifference","abs","yDifference","attackRange","moveRange","Class","isArray","c","availableCells","initialLimit","finalLimit","occupiedCells","xLeft","xRight","yBottom","yTop","coordinates","coordinate","includes","localStorage","gameCtrl","characterGenerator","allowedTypes","maxLevel","characterClassIndex","characterLevel","playerGenerator","next","topRow","bottomRow","leftColumn","rightColumn","range","random"],"sourceRoot":""}